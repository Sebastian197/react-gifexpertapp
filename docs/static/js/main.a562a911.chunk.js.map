{"version":3,"sources":["components/AddCategory.jsx","components/GifGridItem.jsx","helpers/getGifs.js","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","placeholderValue","setPlaceholderValue","onSubmit","e","preventDefault","trim","cats","type","value","onChange","target","placeholder","GifGridItem","title","url","className","src","alt","getGif","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","console","log","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"iPA2CeA,EArCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,OAIWF,mBAAS,iCAJpB,mBAI9BG,EAJ8B,KAIZC,EAJY,KAiBrC,OAEI,0BACIC,SAVa,SAAAC,GACjBA,EAAEC,iBACFN,EAAWO,QAAUT,GAAc,SAAAU,GAAI,OAAKR,GAAL,mBAAoBQ,OAC3DP,EAAc,IACdE,EAAoB,MAQhB,2BACIM,KAAK,OACLC,MAAOV,EACPW,SAnBc,SAAAN,GACtBJ,EAAcI,EAAEO,OAAOF,QAmBfG,YAAaX,MClBdY,G,KAVK,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEzB,OACI,yBAAKC,UAAU,6DACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,M,uBCTHK,EAAM,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,4DAEH,mCACD,GAERN,EALY,iDAKoCO,UAAWF,GAL/C,kBAGJ,GAHI,oBAEH,oCAFG,SAMCG,MAAMR,GANP,cAMZS,EANY,gBAQKA,EAAKC,OARV,uBAQVC,EARU,EAQVA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAEzB,MAAO,CAEHC,GAAID,EAAIC,GACRhB,MAAK,OAAEe,QAAF,IAAEA,OAAF,EAAEA,EAAKf,MACZC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAhBxB,kBAqBXY,GArBW,4CAAH,sDCiCJM,EA5BC,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECFN,SAACA,GAAc,IAAD,EAEZtB,mBAAS,CAE/B4B,KAAM,GACNQ,SAAS,IALyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KA6BtC,OApBAC,qBAAU,WAENlB,EAAOC,GACFkB,MAAK,SAAAC,GAEFC,YAAW,WAAOC,QAAQC,IAAIH,GAE1BH,EAAS,CAELV,KAAMa,EACNL,SAAS,MAId,UAIZ,CAACd,IAEGe,EDzByBQ,CAAavB,GAAhCW,EAFiB,EAEvBL,KAAcQ,EAFS,EAETA,QAErB,OACI,oCACI,wBAAIlB,UAAU,yDAAyDI,GAErEc,GAAW,uBAAGlB,UAAU,oCAAmC,0CAE7D,yBAAKA,UAAU,aAGPe,EAAOH,KAAI,SAAAC,GAAG,OAEV,kBAAC,EAAD,eACIe,IAAKf,EAAIC,IACLD,UEgBjBgB,EAjCM,WAAO,IAAD,EAEa/C,mBAAS,IAFtB,mBAEhBgD,EAFgB,KAEJjD,EAFI,KAYvB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAGIiD,EAAWlB,KACP,SAACR,GAAD,OACI,kBAAC,EAAD,CACIwB,IAAKxB,EACLA,SAAUA,SCvBtC2B,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.a562a911.chunk.js","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\n\nconst AddCategory = ({setCategories}) => {\n\n    const [inputValue, setinputValue] = useState('');\n\n    const [placeholderValue, setPlaceholderValue] = useState('Busca tus gifs ejemplo: risas');\n\n    const handleInputChange = e => {\n        setinputValue(e.target.value);\n    } \n\n    const handleSubmit = e => {\n        e.preventDefault();\n        inputValue.trim() && setCategories(cats => [inputValue, ...cats]);\n        setinputValue('');\n        setPlaceholderValue('');\n    }\n\n    return (\n\n        <form\n            onSubmit={handleSubmit}\n        >\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n                placeholder={placeholderValue}\n            />\n        </form>\n\n    );\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory;","import React from 'react';\n\nimport 'animate.css';\n\nconst GifGridItem = ({title, url}) => {\n\n    return (  \n        <div className='card animate__animated animate__fadeIn animate__delay-.5s'>\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n        </div>\n    );\n}\n \nexport default GifGridItem;\n","export const getGif = async ( category) => {\n\n    const apiKey = 'pKxXQ1rFFyNCJKoYAPOMODFmqFuEKGjF';\n    const limit = 10;\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=${limit}&api_key=${apiKey}`;\n    const resp = await fetch(url);\n\n    const { data } = await resp.json();\n\n    const gifs = data.map(img => {\n\n        return {\n\n            id: img.id,\n            title: img?.title,\n            url: img.images?.downsized_medium.url\n        }\n\n    });\n\n    return gifs;\n\n}","import React from 'react';\nimport GifGridItem from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport 'animate.css';\n\nconst GifGrid = ({ category }) => {\n\n    const {data: images, loading} = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className='animate__animated animate__fadeIn animate__delay-1.5s'>{category}</h3>\n\n            { loading && <p className='animate__animated animate__flash'><i>Loading...</i></p>}\n            \n            <div className='card-grid'>\n    \n                {\n                    images.map(img => (\n\n                        <GifGridItem\n                            key={img.id}\n                            {...img}\n                        />\n\n                    ))\n                }\n\n            </div>\n        </>\n    );\n}\n\nexport default GifGrid;\n","import { useState, useEffect } from 'react';\nimport { getGif } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setstate] = useState({\n\n        data: [],\n        loading: true,\n\n    });\n\n    useEffect(() => {\n\n        getGif(category)\n            .then(imgs => {\n\n                setTimeout(() => {console.log(imgs)\n\n                    setstate({\n\n                        data: imgs,\n                        loading: false,\n\n                    });\n\n                }, 2000);\n\n            })\n\n    }, [category]);\n\n    return state; // { data: [], loading: true }\n\n}","import React from 'react';\nimport { useState } from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState([]);\n\n    /*const handleAdd = () => {\n\n        setCategories( [...categories, 'HunterXHunter'] );\n\n        // setCategories(cats => [...cats, 'HunterXHunter']);\n\n    }*/\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr />\n\n            {\n                categories.map(\n                    (category) => (\n                        <GifGrid\n                            key={category}\n                            category={category}\n                        />\n                    )\n                )\n            }\n\n        </>\n    );\n}\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp'\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);"],"sourceRoot":""}